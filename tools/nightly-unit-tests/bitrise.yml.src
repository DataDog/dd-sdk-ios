---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other

app:
  envs:
  - PROJECT_PATH: Datadog.xcworkspace
  - PROJECT_SCHEME: Datadog iOS

workflows:
  run_all:
    after_run:
    - _make_dependencies
    ### <WORKFLOW INVOCATIONS> ###
    - _send_slack_notification

  ### <WORKFLOW DEFINITIONS> ###

  _make_dependencies:
    description: |-
        Does `make dependencies` to prepare source code in repo for building and testing.
    steps:
    - script@1.1.6:
        title: Do `make dependencies`.
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            make dependencies ci=${CI}

            # Patch for `dd-sdk-swift-testing` to disable network instrumentation which
            # is causing some URLSession-related tests failures on iOS 11.x and 12.x.
            #
            # This issue is already reported to otel-swift:
            # https://github.com/open-telemetry/opentelemetry-swift/issues/229
            # and this patch can be removed after the fix is available in `dd-sdk-swift-testing`.
            echo "DD_DISABLE_NETWORK_INSTRUMENTATION=1" >> xcconfigs/DatadogSDKTesting.local.xcconfig

  _run_unit_tests:
    steps:
    - script@1.1.6:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            echo "+------------------------------------------------------------------------------+"
            printf '| %-78s |\n' "üß™ Running unit tests for ${PROJECT_SCHEME} on ${SIMULATOR_DEVICE} (${SIMULATOR_OS_VERSION})"
            echo "+------------------------------------------------------------------------------+"
    - xcode-test@2.4.5:
        title: Run unit tests for given platform
        is_always_run: true # continue next tests if some failed
        run_if: '{{(getenv "DD_SKIP_RUNNING_TESTS") | eq ""}}'
        inputs:
        - project_path: $PROJECT_PATH
        - scheme: $PROJECT_SCHEME
        - simulator_device: $SIMULATOR_DEVICE
        - simulator_os_version: $SIMULATOR_OS_VERSION
        - is_clean_build: 'no'
        - ## <RETRY_ON_FAIL> ##
        - generate_code_coverage_files: 'yes'
        - xcpretty_test_options: --color --report html --output "${BITRISE_DEPLOY_DIR}/Unit-tests-${PROJECT_SCHEME}-${SIMULATOR_DEVICE} (${SIMULATOR_OS_VERSION}).html"
    - deploy-to-bitrise-io: {}

  _send_slack_notification:
    description: |-
        Sends Slack notification with the workflow status.
    steps:
    - slack:
        run_if: '{{(getenv "DD_SKIP_SLACK") | eq ""}}'
        inputs:
        - channel: '#mobile-ci-ios'
        - channel_on_error: '#dd-sdk-ios'
        - fields: |-
            macOS|## <MACOS VERSION> ##
            Commit|${GIT_CLONE_COMMIT_HASH}
            Branch|${BITRISE_GIT_BRANCH}
        - buttons: |-
            See Bitrise log|${BITRISE_BUILD_URL}
        - pretext: |-
            Nightly unit tests run: üöÄ all good
            ### <SLACK SIMULATORS LIST> ###

            Issues found:
            ### <SLACK ISSUES LIST> ###
        - pretext_on_error: |-
            Nightly unit tests run: ‚ö†Ô∏è some tests did failÔ∏è
            ### <SLACK SIMULATORS LIST> ###

            Issues found:
            ### <SLACK ISSUES LIST> ###
        - color: '#36e500'
        - color_on_error: '#FF0000'
        - author_name: ''
        - message: ''
        - message_on_error: ''
        - icon_url: 'https://avatars.githubusercontent.com/t/3555052?s=128&v=4'
        - webhook_url: '${SLACK_INCOMING_WEBHOOK_MOBILE_CI}'
