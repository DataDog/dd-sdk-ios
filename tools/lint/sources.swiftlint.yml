# Set of Swift Lint rules enforced for Swift code under `Sources/*` directory

whitelist_rules: # we enable lint rules explicitly - only the ones listed below are active
  - attributes
  - closing_brace
  - closure_end_indentation
  - closure_parameter_position
  - closure_spacing
  - collection_alignment
  - colon
  - comma
  - compiler_protocol_init
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - control_statement
  - custom_rules
  - duplicate_imports
  - empty_collection_literal
  - empty_enum_arguments
  - empty_parameters
  - empty_parentheses_with_trailing_closure
  - empty_xctest_method
  - explicit_top_level_acl
  - first_where
  - for_where
  - force_cast
  - force_try
  - force_unwrapping
  - function_default_parameter_at_end
  - identifier_name
  - implicitly_unwrapped_optional
  - last_where
  - leading_whitespace
  - legacy_hashing
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - mark
  # - missing_docs # TODO: RUMM-126 enforce documentation for public APIs
  - modifier_order
  - multiline_arguments
  - multiline_arguments_brackets
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - no_space_in_method_call
  - number_separator
  - opening_brace
  - operator_usage_whitespace
  - operator_whitespace
  - redundant_discardable_let
  - redundant_type_annotation
  - redundant_void_return
  - return_arrow_whitespace
  - statement_position
  - switch_case_alignment
  - syntactic_sugar
  - trailing_closure
  - trailing_newline
  - trailing_semicolon
  - trailing_whitespace
  - unavailable_function
  - unneeded_break_in_switch
  - unneeded_parentheses_in_closure_argument
  - unused_declaration
  - unused_import
  - vertical_whitespace
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - void_return
  - xct_specific_matcher

custom_rules:
  todo_without_jira: # enforces that all TODO comments must be followed by JIRA reference
    name: "TODO without JIRA"
    regex: "(TODO|TO DO|FIX|FIXME|FIX ME|todo)(?!:? RUMM-[0-9]{2,})" # "TODO: RUMM-123", "TODO RUMM-123", "FIX RUMM-123", etc.
    match_kinds:
      - comment
    message: "All TODOs must be followed by JIRA reference, for example: \"TODO: RUMM-123\""
    severity: error

included:
  - Sources
  - instrumented-tests/Integration/Integration
  - instrumented-tests/Benchmark/Benchmark
  - http-server-mock/Sources
  - datadog-test-helpers/Sources
